#+title: Atari Coin-Op Game Development Demo
#+author: Thomas Cherryhomes
#+email: thom.cherryhomes@gmail.com

* I. GOAL

Demonstrate Atari Coin-Op's 6502 Macro Assembler for PDP-11
in context.

[[https://i.ebayimg.com/images/g/vb0AAOSwiXFgxZ5P/s-l1600.jpg][Centipede Cabinet]]

- A quick overview of PDP-11 Development System
  
- Modify original Centipede coin-op source code, assemble,
  link, and cut up into ROMs.

- Run new ROMs on MAME as "ersatz" black box.

* CENTIPEDE

[[https://uploads.tapatalk-cdn.com/20170909/40cce19b998f564161b542bff9edfb3b.jpg][Centipede Board]]

- Developed by Atari throughout 1980
- Revision 2 released 5/28/81
- 6502 CPU
- Movable objects for player and enemies
- Tile playfield for mushrooms/messages/score/etc.

* OVERVIEW OF DEVELOPMENT SYSTEM

- [[https://www.physics.purdue.edu/~jones105/pdp-11/images/IMG_2877.JPG][PDP 11/23]]
- 16-bit mini-computer from 1979
- 64 kW of memory
- 3 [[https://upload.wikimedia.org/wikipedia/commons/9/94/RK05.jpg][RK05]] 2.5 megabyte cartridge drives
- 1 [[https://i0.wp.com/avitech.com.au/wp-content/uploads/2016/08/rx01-front.jpg][RX01]] floppy disk
- 1 [[https://i.ytimg.com/vi/l--OHNxXFeE/maxresdefault.jpg][PC05]] paper tape reader and punch
- 1 [[https://upload.wikimedia.org/wikipedia/commons/9/99/DEC_VT100_terminal.jpg][VT100]] as system console terminal
- OS: RT-11 V3 (1977)

* OVERVIEW OF BLACK BOX

- Emulating Centipede board
- Taking paper tape input to create EPROMS
- MAME debugger is substitute for HP 1611A Logic Analyser

(using paper tape is an example of the improvisation needed
by old school developers, to get artifacts to their
destination, and is not indicative of the exact process used
at ATARI.)

* STEP 1: EDIT CODE

- Boot into RT-11
- Use KED to make code change
- SY: disk is RK05, containing OS, and tools.
- DK1: disk is RK05, containing source code.
- VT100 is used as system console by programmer.

- VT100 Keys used in KED:
  ESC OP (PF1)
  ESC Ow (KP7)
  ESC OM (KPENTER)
  
* STEP 2: ASSEMBLE CODE

- Assign DK to DK1 to make things easier

#+BEGIN_EXAMPLE
.ASSIGN RK1 DK
#+END_EXAMPLE

- Call MAC65 to assemble code:

#+BEGIN_EXAMPLE
.R MAC65
*CENTI2=CENTI2
*CENIR2=CENIR2
*CENTS2=CENTS2
^C
#+END_EXAMPLE

- Object files are now present on DK1:

* STEP 3: RUN LINKM TO PRODUCE ABSOLUTE BINARY

- Call LINKM to produce absolute SAV file.

#+BEGIN_EXAMPLE
.R LINKM
*DK2:CENTI2CENTI2.XX=CENTI2,CENIR2,CENTS2
*DK2:CENPIC,CENPIC.XX=CENPIC
*DK2:SYNC,SYNC.XX=SYNC
^C
#+END_EXAMPLE

- Two types of files now on DK2:
  .SAV an absolute memory image
  .XX the symbol map, with addresses for each public symbol

* STEP 4: SEND FILES TO BLACK BOX VIA PAPER TAPE

- We need to send three files:
  CENTI2.SAV
  CENPIC.SAV
  SYNC.SAV

- For each, we:
  Ready the punch.

#+BEGIN_EXAMPLE
^E
sim> att ptp centi2.sav
sim> cont
#+END_EXAMPLE

- Then we COPY the file to the punch, which creates the tape.

#+BEGIN_EXAMPLE
.COPY CENTI.SAV PC:
#+END_EXAMPLE

- The paper tape is then read into the development box
  (not shown)

* STEP 5: CUT THE SAV file into the ROM images

- The SAV files are absolute images, starting at address 0

- CENTI2, therefore has an 8K gap at beginning.

- We need to splice the SAV file into 2716 EPROM images,
  2048 bytes each.
  
- At ATARI, a tool called IMGFIL was used. We don't have it,
  but we can recreate its behavior using 'dd' under Linux:

#+BEGIN_EXAMPLE
$ dd if=centi2.sav of=/home/thomc/Workspace/mame/roms/centiped2/136001-207.d1 bs=1 count=2048 skip=8192
$ dd if=centi2.sav of=/home/thomc/Workspace/mame/roms/centiped2/136001-208.e1 bs=1 count=2048 skip=10240
$ dd if=centi2.sav of=/home/thomc/Workspace/mame/roms/centiped2/136001-209.fh1 bs=1 count=2048 skip=12288
$ dd if=centi2.sav of=/home/thomc/Workspace/mame/roms/centiped2/136001-210.j1 bs=1 count=2048 skip=14336
$ dd if=cenpic.sav of=/home/thomc/Workspace/mame/roms/centiped2/136001-211.f7 bs=1 count=2048
$ dd if=cenpic.sav of=/home/thomc/Workspace/mame/roms/centiped2/136001-212.hj7 bs=1 count=2048 skip=2048
$ dd if=sync2.sav of=/home/thomc/Workspace/mame/roms/centiped2/136001-213.p4 bs=1 count=256
#+END_EXAMPLE

* STEP 6: START THE BLACK BOX AND TEST THE RESULT

#+START_EXAMPLE
$ cd ~/Workspace/mame
$ ./mamed -debug -window centiped2
#+END_EXAMPLE

* REFERENCES

- The atari-coin-op-assembler repo:
  https://github.com/tschak909/atari-coin-op-assembler

- The atari coin op tools originally from:
  https://bitsavers.org/bits/Atari/arcade/atari_tools.zip

- The HistoricalSource repo on GitHub:
  https://github.com/historicalsource

  Thanks to:

  Al Kossow, for Bitsavers
  Jim Geist, for helping debug the toolchain
  HistoricalSource, for posting all the source code for study

